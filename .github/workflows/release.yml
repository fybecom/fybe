# This GitHub action can publish assets for release when a tag is created.
# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
#
# This uses an action (crazy-max/ghaction-import-gpg) that assumes you set your 
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step 
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: release
# on:
#   push:
#     tags:
#       - 'v*'
on: 
  push:
    branches: 
      - 'feat/*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    env:
      OPENAPIURL: "https://api.fybe.com/api-v1.yaml"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20
      
      # - name: Import GPG key
      #   id: import_gpg
      #   uses: crazy-max/ghaction-import-gpg@v5
      #   with:
      #     gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
      #     passphrase: ${{ secrets.PASSPHRASE }}
      
      - name: Build openapi client 
        run: rm -rf apiclient; docker run --rm -v "${PWD}:/local" --env JAVA_OPTS='-Dio.swagger.parser.util.RemoteUrl.trustAll=true -Dio.swagger.v3.parser.util.RemoteUrl.trustAll=true' openapitools/openapi-generator-cli:v5.2.1 generate --skip-validate-spec --input-spec 'https://api.fybe.com/api-v1.yaml' --generator-name go --output /local/apiclient
        env:
          OPENAPIVOLUME: "openapivolume:/local"
          OUTPUTLOCATION: "/local/"

      - name: Build fybe cli 
        run: go mod tidy && go mod download && go build -ldflags="-w -s"
        env:
          OPENAPIVOLUME: "openapivolume:/local"
          OUTPUTLOCATION: "/local/"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.9.1
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}